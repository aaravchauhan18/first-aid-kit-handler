{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/aarav/OneDrive/Desktop/crud-app/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/aarav/OneDrive/Desktop/crud-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/aarav/OneDrive/Desktop/crud-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import axios from'axios';import toast from'react-hot-toast';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Medicine=function Medicine(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),medicines=_useState2[0],setMedicines=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('http://localhost:8000/api/getall');case 2:response=_context.sent;setMedicines(response.data);case 4:case\"end\":return _context.stop();}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var deleteMedicine=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(medicineId){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.delete(\"http://localhost:8000/api/delete/\".concat(medicineId)).then(function(response){setMedicines(function(prevMedicine){return prevMedicine.filter(function(medicine){return medicine._id!==medicineId;});});toast.success(response.data.msg,{position:'top-right'});}).catch(function(error){console.log(error);});case 2:case\"end\":return _context2.stop();}},_callee2);}));return function deleteMedicine(_x){return _ref2.apply(this,arguments);};}();var formatDate=function formatDate(dateString){var options={day:'2-digit',month:'2-digit',year:'numeric'};var formattedDate=new Date(dateString).toLocaleDateString(undefined,options);// Convert the date to DD-MM-YYYY format\nvar _formattedDate$split=formattedDate.split('/'),_formattedDate$split2=_slicedToArray(_formattedDate$split,3),day=_formattedDate$split2[0],month=_formattedDate$split2[1],year=_formattedDate$split2[2];return\"\".concat(month,\"-\").concat(day,\"-\").concat(year);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(Link,{to:'/add',className:\"btn btn-primary mb-3\",children:\"Add Medicine\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-hover\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"thead-dark\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"S.No.\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Medicine\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Expiry Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:medicines.map(function(medicine,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:medicine.medicine}),/*#__PURE__*/_jsx(\"td\",{children:medicine.desc}),/*#__PURE__*/_jsx(\"td\",{children:medicine.quantity}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(medicine.expiry)}),/*#__PURE__*/_jsxs(\"td\",{className:\"actionButtons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deleteMedicine(medicine._id);},className:\"btn btn-danger\",children:\"Delete\"}),/*#__PURE__*/_jsx(Link,{to:\"/edit/\"+medicine._id,className:\"btn btn-primary ml-2\",children:\"Edit\"})]})]},medicine._id);})})]})]});};export default Medicine;","map":{"version":3,"names":["React","useEffect","useState","axios","toast","Link","jsx","_jsx","jsxs","_jsxs","Medicine","_useState","_useState2","_slicedToArray","medicines","setMedicines","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","data","stop","apply","arguments","deleteMedicine","_ref2","_callee2","medicineId","_callee2$","_context2","delete","concat","then","prevMedicine","filter","medicine","_id","success","msg","position","catch","error","console","log","_x","formatDate","dateString","options","day","month","year","formattedDate","Date","toLocaleDateString","undefined","_formattedDate$split","split","_formattedDate$split2","className","children","to","map","index","desc","quantity","expiry","onClick"],"sources":["C:/Users/aarav/OneDrive/Desktop/crud-app/client/src/components/getmedicine/Medicine.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Medicine = () => {\r\n  const [medicines, setMedicines] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get('http://localhost:8000/api/getall');\r\n      setMedicines(response.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const deleteMedicine = async (medicineId) => {\r\n    await axios\r\n      .delete(`http://localhost:8000/api/delete/${medicineId}`)\r\n      .then((response) => {\r\n        setMedicines((prevMedicine) => prevMedicine.filter((medicine) => medicine._id !== medicineId));\r\n        toast.success(response.data.msg, { position: 'top-right' });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n    const formattedDate = new Date(dateString).toLocaleDateString(undefined, options);\r\n\r\n    // Convert the date to DD-MM-YYYY format\r\n    const [day, month, year] = formattedDate.split('/');\r\n    return `${month}-${day}-${year}`;\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"container mt-4\">\r\n      <Link to={'/add'} className=\"btn btn-primary mb-3\">\r\n        Add Medicine\r\n      </Link>\r\n      <table className=\"table table-bordered table-hover\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>S.No.</th>\r\n            <th>Medicine</th>\r\n            <th>Description</th>\r\n            <th>Quantity</th>\r\n            <th>Expiry Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {medicines.map((medicine, index) => (\r\n            <tr key={medicine._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{medicine.medicine}</td>\r\n              <td>{medicine.desc}</td>\r\n              <td>{medicine.quantity}</td>\r\n              <td>{formatDate(medicine.expiry)}</td>\r\n              <td className=\"actionButtons\">\r\n                <button onClick={() => deleteMedicine(medicine._id)} className=\"btn btn-danger\">\r\n                  Delete\r\n                </button>\r\n                <Link to={`/edit/` + medicine._id} className=\"btn btn-primary ml-2\">                  \r\n                  Edit\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Medicine;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}