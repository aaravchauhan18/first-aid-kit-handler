{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarav\\\\OneDrive\\\\Desktop\\\\crud-app\\\\client\\\\src\\\\components\\\\getuser\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport \"./medicine.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Medicine = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:8000/api/getall\");\n      setMedicines(response.data);\n    };\n    fetchData();\n  }, []);\n  const deleteMedicines = async medicineId => {\n    await axios.delete(`http://localhost:8000/api/delete/${medicineId}`).then(respones => {\n      setMedicines(prevMedicine => prevMedicine.filter(medicine => medicine._id !== medicineId));\n      toast.success(respones.data.msg, {\n        position: 'top-right'\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const formatDate = dateString => {\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"medicineTable\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add\",\n      className: \"addButton\",\n      children: \"Add Medicine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      cellPadding: 10,\n      cellSpacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S.No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Medicine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiry Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: medicines.map((medicine, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: medicine.medicine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: medicine.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: medicine.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(medicine.expiry)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"actionButtons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deletemedicine(medicine._id),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 85\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/edit/` + medicine._id,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-pen-to-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, medicine._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Medicine, \"ZxXDyD5zuog6csW41MwgtHmUf9w=\");\n_c = Medicine;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"Medicine\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","Link","jsxDEV","_jsxDEV","Medicine","_s","medicines","setMedicines","fetchData","response","get","data","deleteMedicines","medicineId","delete","then","respones","prevMedicine","filter","medicine","_id","success","msg","position","catch","error","console","log","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","undefined","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","cellSpacing","map","index","desc","quantity","expiry","onClick","deletemedicine","_c","User","$RefreshReg$"],"sources":["C:/Users/aarav/OneDrive/Desktop/crud-app/client/src/components/getuser/User.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport \"./medicine.css\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Medicine = () => {\r\n\r\n  const [medicines, setMedicines] = useState([]);\r\n\r\n  useEffect(()=>{\r\n\r\n    const fetchData = async()=>{\r\n        const response = await axios.get(\"http://localhost:8000/api/getall\");\r\n        setMedicines(response.data);\r\n    }\r\n\r\n    fetchData();\r\n\r\n  },[])\r\n\r\n  const deleteMedicines = async(medicineId) =>{\r\n      await axios.delete(`http://localhost:8000/api/delete/${medicineId}`)\r\n      .then((respones)=>{\r\n        setMedicines((prevMedicine)=> prevMedicine.filter((medicine)=> medicine._id !== medicineId))\r\n        toast.success(respones.data.msg, {position: 'top-right'})\r\n      })\r\n      .catch((error) =>{\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { day: '2-digit', month: '2-digit', year: 'numeric'};\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <div className='medicineTable'>\r\n        <Link to={\"/add\"} className='addButton'>Add Medicine</Link>\r\n        <table border={1} cellPadding={10} cellSpacing={0}>\r\n            <thead>\r\n                <tr>\r\n                    <th>S.No.</th>\r\n                    <th>Medicine</th>\r\n                    <th>Description</th>\r\n                    <th>Quantity</th>\r\n                    <th>Expiry Date</th>\r\n\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    medicines.map((medicine, index)=>{\r\n                        return(\r\n                        <tr key={medicine._id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{medicine.medicine}</td>\r\n                            <td>{medicine.desc}</td>\r\n                            <td>{medicine.quantity}</td>\r\n                            {/* <td>{medicine.expiry}</td> */}\r\n                            <td>{formatDate(medicine.expiry)}</td>\r\n                            <td className='actionButtons'>\r\n                                <button onClick={()=> deletemedicine(medicine._id)}><i className=\"fa-solid fa-trash\"></i></button>\r\n                                <Link to={`/edit/`+medicine._id}><i className=\"fa-solid fa-pen-to-square\"></i></Link>\r\n                            </td>\r\n                        </tr>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}